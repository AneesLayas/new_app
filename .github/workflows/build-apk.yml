name: Build APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'gradle'
    
    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2
      with:
        gradle-version: '7.5'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        cmdline-tools-version: '9477386'
        build-tools-version: '34.0.0'
        platform-version: '34'
        ndk-version: '25.1.8937393'
        cmake-version: '3.22.1'
        additional-components: 'platform-tools,emulator'
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        cache: true
    
    - name: Debug Flutter
      run: |
        flutter doctor -v
        flutter --version
    
    - name: Install dependencies
      run: |
        flutter pub get
        flutter pub upgrade
    
    - name: Setup Keystore
      if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/main'
      run: |
        echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/keystore.jks
    
    - name: Clean project
      run: |
        flutter clean
        cd android
        ./gradlew clean
        cd ..
    
    - name: Build APK
      env:
        ANDROID_HOME: ${{ secrets.ANDROID_HOME }}
        ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
        ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
        GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true"
      run: |
        flutter config --android-sdk $ANDROID_HOME
        flutter build apk --release --verbose
    
    - name: Verify APK
      run: |
        if [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
          echo "APK built successfully"
          ls -l build/app/outputs/flutter-apk/
        else
          echo "APK build failed"
          exit 1
        fi
    
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-release
        path: build/app/outputs/flutter-apk/app-release.apk
        retention-days: 30 